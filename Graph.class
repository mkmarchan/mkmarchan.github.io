import java.applet.*;
import java.awt.*;

public class Graph extends Applet{

	TextField text1, text2, text3, text4;
    
    public void init()
    {
         text1 = new TextField(8);
         text2 = new TextField(8);
         text3 = new TextField(8);
         text4 = new TextField(8);
         add(text1);
         add(text2);
         add(text3);
         add(text4);
         text1.setText("0");
         text2.setText("1");
         text3.setText("0");
         text4.setText("1");
    }

    public void paint(Graphics g)
    {
        int c=0,mult=1,func=0, pow=1;
        final int RES = 100;
        final int MAGNIFY = 100;
        final int SHIFT = 500;
        double[] radius = new double[RES + 1];
        int[] xco = new int[RES + 1];
        int[] yco = new int[RES + 1];
        String s1,s2, s3, s4;
        try
        {
               s1 = text1.getText();
               c = Integer.parseInt(s1);
               s2 = text2.getText();
               mult = Integer.parseInt(s2);
               s3 = text3.getText();
               func = Integer.parseInt(s3);
               s4 = text4.getText();
               pow = Integer.parseInt(s4);
         }
        catch(Exception e) {}
        
        if(func == 1)
        {
        	for(int i = 0; i <= RES; i++)
            {
           	 	radius[i] = (c + mult * Math.sin(i * 3.14 * 2 / ((double) RES )));
            }
        }
        else if(func == 2)
        {
        	for(int i = 0; i <= RES; i++)
            {
           	 	radius[i] = (c + mult * Math.cos(i * 3.14 * 2 / ((double) RES )));
            }
        }
        else
        {
        	for(int i = 0; i <= RES; i++)
            {
           	 	radius[i] = (c + (mult * i * 3.14 * 2 / ((double) RES )));
            }
        }
        
        for(int i = 0; i <= RES; i++ )
        {
       	 	xco[i] = SHIFT + (int) (MAGNIFY * -1 * radius[i] * Math.cos(i * 3.14 * 2 / ((double) RES )));
       	 	yco[i] = SHIFT + (int) (MAGNIFY * -1 * radius[i] * Math.sin(i * 3.14 * 2 / ((double) RES )));
        }
        
        for(int i = 0; i < RES; i++)
        {
       	 	//g.drawLine(xco[i], yco[i], xco[i+1], yco[i+1]);
        	g.drawRect(xco[i], yco[i], 2, 2);
        }
  }

  public boolean action(Event event, Object obj)
  {
        repaint();
        return true;
  }
}